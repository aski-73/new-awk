/* Generated By:JavaCC: Do not edit this line. NawkParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NawkParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 1;
  /** RegularExpression Id. */
  int MINUS = 2;
  /** RegularExpression Id. */
  int STAR = 3;
  /** RegularExpression Id. */
  int SLASH = 4;
  /** RegularExpression Id. */
  int MOD = 5;
  /** RegularExpression Id. */
  int EXP = 6;
  /** RegularExpression Id. */
  int ASSIGN = 7;
  /** RegularExpression Id. */
  int BANG = 8;
  /** RegularExpression Id. */
  int GT = 9;
  /** RegularExpression Id. */
  int LT = 10;
  /** RegularExpression Id. */
  int EQ = 11;
  /** RegularExpression Id. */
  int LE = 12;
  /** RegularExpression Id. */
  int GE = 13;
  /** RegularExpression Id. */
  int NE = 14;
  /** RegularExpression Id. */
  int OR = 15;
  /** RegularExpression Id. */
  int AND = 16;
  /** RegularExpression Id. */
  int LPAREN = 17;
  /** RegularExpression Id. */
  int RPAREN = 18;
  /** RegularExpression Id. */
  int LBRACE = 19;
  /** RegularExpression Id. */
  int RBRACE = 20;
  /** RegularExpression Id. */
  int LBRACKET = 21;
  /** RegularExpression Id. */
  int RBRACKET = 22;
  /** RegularExpression Id. */
  int SEMICOLON = 23;
  /** RegularExpression Id. */
  int COMMA = 24;
  /** RegularExpression Id. */
  int VOID = 31;
  /** RegularExpression Id. */
  int TRUE = 32;
  /** RegularExpression Id. */
  int FALSE = 33;
  /** RegularExpression Id. */
  int RETURN = 34;
  /** RegularExpression Id. */
  int DOT = 35;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 36;
  /** RegularExpression Id. */
  int DOUBLE_LITERAL = 37;
  /** RegularExpression Id. */
  int CHAR_LTIERAL = 38;
  /** RegularExpression Id. */
  int STRING_LITERAL = 39;
  /** RegularExpression Id. */
  int Ident = 40;
  /** RegularExpression Id. */
  int anything = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"^\"",
    "\"=\"",
    "\"!\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\"double\"",
    "\"int\"",
    "\"print\"",
    "\"string\"",
    "\"boolean\"",
    "\"char\"",
    "\"void\"",
    "\"true\"",
    "\"false\"",
    "\"return\"",
    "\".\"",
    "<INTEGER_LITERAL>",
    "<DOUBLE_LITERAL>",
    "<CHAR_LTIERAL>",
    "<STRING_LITERAL>",
    "<Ident>",
    "\" \"",
    "\"\\t\"",
    "<anything>",
  };

}
